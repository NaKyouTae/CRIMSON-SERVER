services:
  crimson-service:
    image: crimson-server:local
    container_name: crimson-server
    ports:
      - "8080:8080"
    env_file:
      - docker-compose.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - crimson-network

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    env_file:
      - docker-compose.env
    environment:
      POSTGRES_DB: ${DB_NAME:-postgres}
      POSTGRES_USER: ${DB_USER_NAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    command:
      - postgres
      - -c
      - max_connections=100
      - -c
      - shared_buffers=256MB
      - -c
      - effective_cache_size=1GB
      - -c
      - ssl=on
      - -c
      - ssl_min_protocol_version=TLSv1.2
    networks:
      - crimson-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER_NAME:-postgres} -d ${DB_NAME:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  redis:
    image: redis:8.2.0-alpine
    container_name: redis
    env_file:
      - docker-compose.env
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru --appendonly yes --save 900 1 --save 300 10 --save 60 10000
    networks:
      - crimson-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - crimson-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - crimson-network

volumes:
  postgres-data:
  redis-data:

networks:
  crimson-network:
    driver: bridge
