spring:
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: ${SHOW_LOG} # SQL 로그 출력
    open-in-view: false
    properties:
      hibernate:
        format_sql: ${SHOW_LOG} # SQL 포맷팅
        highlight_sql: ${SHOW_LOG} # ANSI 색상으로 SQL 하이라이트
        use_sql_comments: ${SHOW_LOG} # SQL 주석 /* */ 출력
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_batch_fetch_size: 100
        jdbc:
          batch_size: 100
        order_inserts: true
        order_deletes: true
        order_updates: true
  datasource:
    url: jdbc:postgresql://${DB_HOST}:5432/crimson
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: ${DB_PASSWORD}
    hikari:
      transaction-isolation: TRANSACTION_READ_COMMITTED
  #        connection-init-sql: set session aurora_read_replica_read_committed = ON;
  data:
    redis:
      host: ${REDIS_HOST}
      port: 6379
  sql:
    init:
      mode: always
      data-locations: classpath:/init/data.sql

liquibase:
  should-run: ${LIQUIBASE_RUN}
  change-log: classpath:db/changelog/db.changelog-master.yml

jwt:
  issuer: spectrum
  secret-key: testSecretKey20230327testSecretKey20230327testSecretKey20230327
  access:
    expiration-hours: 1
  refresh:
    expiration-days: 7

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.type: trace
    org.hibernate.stat: debug
    liquibase: debug

management:
  endpoints:
    jmx:
      exposure:
        exclude: "*"
    web:
      base-path: /actuator
      exposure:
        include: info, health, prometheus, httptrace, metrics
  metrics:
    tags:
      application: taghere-api